package com.android.photoalbum.parser;


import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import android.graphics.Bitmap;
import android.util.Log;

import com.android.photoalbum.netinfo.ClassificationLocalSiteInfo;
import com.android.photoalbum.netinfo.ClassificationWebSiteInfo;
import com.android.photoalbum.netinfo.LocalSiteInfo;
import com.android.photoalbum.netinfo.MusicLocalSiteInfo;
import com.android.photoalbum.netinfo.MusicWebsiteInfo;
import com.android.photoalbum.netinfo.SearchLocalSiteInfo;
import com.android.photoalbum.netinfo.SearchWebsiteInfo;
import com.android.photoalbum.netinfo.ServerInfo;
import com.android.photoalbum.netinfo.WebsiteInfo;
import com.android.photoalbum.utils.NetWorkUtils;

import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

public class MusicWebsiteParser extends WebsiteParser {
	
	@Override
    public WebsiteInfo parseWebsiteInfo(String urlPar, LocalSiteInfo localInfo) {
		MusicWebsiteInfo musicWebsiteInfo = null;
		MusicWebsiteInfo.MusicInfo musicInfo = null;
    	WebsiteInfo webinfo = new WebsiteInfo();
    	 
    	MusicLocalSiteInfo localSiteInfo = (MusicLocalSiteInfo)localInfo;
		String param = "?optype=" + localSiteInfo.optype + "&id=" + localSiteInfo.id;
    	
        try {
            URL url = new URL(NetWorkUtils.BASE_URI + urlPar + param);
            Log.d("zheng", "parseWebsiteInfo url:" + url.toString());
            URLConnection connection = url.openConnection();
            HttpURLConnection httpConnection = (HttpURLConnection)connection;
            int responseCode = httpConnection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                InputStream in = httpConnection.getInputStream();
                DocumentBuilderFactory dbfactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder db = dbfactory.newDocumentBuilder();
                Document dom = db.parse(in);
                Element docEle = dom.getDocumentElement();

                WebsiteInfo result = getResult(docEle);
                if (!ServerInfo.SUCCESS.equals(result.result)) {
                	return result;
                }
                
                NodeList nl = docEle.getElementsByTagName("music");
                if (nl != null && nl.getLength() > 0) {
                	musicWebsiteInfo = new MusicWebsiteInfo();
                    Log.d("zheng", "nl.getLength():" + nl.getLength());
                    for (int i = 0; i < nl.getLength(); i++) {
                        Element entry = (Element)nl.item(i);
                        musicInfo = new MusicWebsiteInfo.MusicInfo();
                    	entry = (Element)nl.item(i);
                    	musicInfo = (MusicWebsiteInfo.MusicInfo)getProductInfo(entry);
                        
                        musicWebsiteInfo.newEntry(musicInfo);
                    }
                }
                
                return musicWebsiteInfo;
            } else {
            	webinfo.result = ServerInfo.FAIL;
            	webinfo.resultdesc = ServerInfo.CONNECT_FAIL + " 返回码:" + responseCode;
            	return webinfo;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    	webinfo.result = ServerInfo.FAIL;
    	webinfo.resultdesc = ServerInfo.UNKNOWN_FAIL;
		return webinfo;
    }

	private WebsiteInfo getProductInfo(Element entry) {
        Element id = (Element)entry.getElementsByTagName("id").item(0);
        Element pname = (Element)entry.getElementsByTagName("pname").item(0);
        Element hname = (Element)entry.getElementsByTagName("hname").item(0);
        Element amrurl = (Element)entry.getElementsByTagName("amrurl").item(0);
		
        MusicWebsiteInfo.MusicInfo nodeinfo = new MusicWebsiteInfo.MusicInfo();
        nodeinfo.id = getWebSiteNodeValue(id);
        nodeinfo.pname = getWebSiteNodeValue(pname);
        nodeinfo.hname = getWebSiteNodeValue(hname);
        nodeinfo.amrurl = getWebSiteNodeValue(amrurl);
        return nodeinfo;
	}
}
